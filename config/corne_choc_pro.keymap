/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 40 41 42 2 3 4 5 17 43 44 45>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <7 21 22 23 24 25 26 27 34 35 36 37 38 39 43 44 45 8 9 10 11 12 13 40 41 42>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BEPO {
            display-name = "BEPO";

            // -------------------------------------------------------------------------------------------
            // | TAB |  b  |  é  |  p  |  o   |  è   | MUTE | VOLUP |  ^  |  v   |  d  |  l  |  l  |  z  |
            // | ESC |  a  |  u  |  i  |  e   |  ,   |      | VOLDN |  c  |  t   |  s  |  r  |  n  |  m  |
            // |  ê  |  w  |  y  |  x  |  .   |  k   |              |  '  |  q   |  g  |  h  |  f  |  à  |
            //                   | LWR | SHFT | BSPC |              | RSE | SPC  | ENT |

            bindings = <
&kp TAB          &kp Q                        &kp W            &kp E  &lt 4 R        &kp T           &kp K_MUTE        &kp C_VOLUME_UP  &kp Y             &kp U      &kp I      &kp O             &kp P                 &kp LEFT_BRACKET
&kp ESCAPE       &hml LCTRL A                 &hml LEFT_ALT S  &kp D  &kp F          &lt 3 G         &kp K_PLAY_PAUSE  &kp C_VOL_DN     &hmr BACKSLASH H  &kp J      &kp K      &hmr RIGHT_ALT L  &hmr RCTRL SEMI       &kp APOSTROPHE
&kp NON_US_BSLH  &hml LEFT_GUI RIGHT_BRACKET  &kp X            &kp C  &kp V          &kp B                                              &kp N             &kp M      &kp COMMA  &kp PERIOD        &hmr RIGHT_GUI SLASH  &kp Z
                                                               &mo 2  &kp BACKSPACE  &kp LEFT_SHIFT                                     &kp SPACE         &kp ENTER  &mo 1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        MOVE {
            display-name = "MOVE";

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |       |      |      |     |     |     |     |     |    |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5   |      | HOME | LFT | DWN |  UP | RGT | END |    |
            // | BTCR | HYPR| RGB | RST | BOOT| Unlock|             |     |     |     |     |     |    |
            //                    |     |     |       |             |     |     |

            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans    &trans    &trans    &trans  &trans     &trans                    &trans
&bt BT_CLR      &trans        &trans           &trans        &trans        &trans          &trans  &kp HOME  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp END                   &trans
&trans          &trans        &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                    &trans    &trans    &trans  &trans     &kp LS(LA(LC(LEFT_GUI)))  &trans
                                               &trans        &trans        &trans                            &trans    &trans    &trans
            >;
        };

        SYMBOLS {
            display-name = "SYMBOLS";

            // ---------------------------------------------------------------------------------------
            // |    |  ÷  |  €  |  {  |  /  |  °  |       |       |  ^  |  \  |  }  |  ~  |  *  | ×  |
            // | «  |  _  |  &  |  [  |  (  |  %  |       |       |  #  |  )  |  ]  | "|" |  $  | »  |
            // | œ  |  -  |  ^  |  <  |  =  |  "  |               |  `  |  ù  |  >  |  @  |  +  | æ  |
            //                  |     |     |     |               |     |     |     |

            bindings = <
&bootloader  &kp RA(N9)     &kp RA(F)   &kp RA(X)         &kp N9        &kp LS(MINUS)  &trans  &trans  &kp RA(D)      &kp RA(Z)     &kp RA(C)         &kp RA(B)  &kp N0     &kp RA(N0)
&kp N2       &kp RA(SPACE)  &kp RA(E)   &kp RA(NUMBER_4)  &kp NUMBER_4  &kp EQUAL      &trans  &trans  &kp LS(GRAVE)  &kp NUMBER_5  &kp RA(NUMBER_5)  &kp RA(Q)  &kp GRAVE  &kp N3
&kp RA(R)    &kp N8         &kp RA(N6)  &kp RA(N2)        &kp MINUS     &kp N1                         &kp LS(EQUAL)  &kp RA(S)     &kp RA(NUMBER_3)  &kp N6     &kp N7     &kp RA(A)
                                        &trans            &trans        &trans                         &trans         &trans        &trans
            >;
        };

        NUMPAD {
            display-name = "NUMPAD";

            // ---------------------------------------------------------------------------------
            // |   |    |    |    |    |    |       | NLOCK |  /  |  7  |  8  |  9  |  *  |    |
            // |   |    |    |    |    |    |       | CLOCK |  -  |  4  |  5  |  6  |  +  |    |
            // |   |    |    |    |    |    |               |     |  1  |  2  |  3  |  =  |    |
            //               |    |    |    |               |     |  0  |  .  |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_NUMLOCK  &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_N9        &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp CAPSLOCK    &kp KP_MINUS     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &kp PRINTSCREEN  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL     &trans
                        &trans  &trans  &trans                          &trans           &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        FKEYS {
            display-name = "FKEYS";

            // ---------------------------------------------------------------------------------
            // |   |    |    |    |    |    |       |       |     | F7  | F8  | F9  | F10 |    |
            // |   |    |    |    |    |    |       |       |     | F4  | F5  | F6  | F11 |    |
            // |   |    |    |    |    |    |               |     | F1  | F2  | F3  | F12 |    |
            //               |    |    |    |               |     |     |     |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };
};
